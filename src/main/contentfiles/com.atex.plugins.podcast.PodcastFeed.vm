#if ($rssFeed)<?xml version="1.0"?> ## this must be the first thing otherwise we will get validation errors
#macro(drawDimension $dimensions $id $sep)
  #set($result='')
  #foreach($dimension in $dimensions)
    #if ($dimension.id == $id)
      #set($entitiesCount = $dimension.entities.size())
      #if($entitiesCount > 0)
        #foreach($entity in $dimension.entities)
          #if ($foreach.count > 1)
            #set($result="${result}${sep}")
          #end
          #set($result="${result}${entity.name}")
        #end
      #end
      #break
    #end
  #end
  $result.trim()
#end
#macro(cdata $value)<![CDATA[$!value]]>#end
## Will need site alias set to get absolute URLs
#set($feedLink="#link({'path': $content.parentIds, 'htmlEncodeLink': 'true', 'requestAttribs': {'localLinksEnabled': 'false'}})")
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
        <channel>
            <title>#cdata($content.name)</title>
            <link>$!feedLink</link>
            <description>#cdata($content.text.value)</description>
            <lastBuildDate>$!lastBuildDate</lastBuildDate>
            ## Add channel image
            #if($hasImage)
                ## Will need an image service configuration for image service location to get absolute URL
                #set($imageUrl = $esc.xml("$!domain${urlBuilder.width(200).buildUrl()}"))
                <image>
                    <title>#cdata($content.name)</title>
                    <link>$!feedLink</link>
                    <url>$!imageUrl</url>
                </image>
            #end
            ##set($language = $content.language.value)
            ##if("$!language" != "")
            ##    <language>$!language</language>
            ##end
            #set($dimensions = $content.metadata.dimensions)
            #set($category="#drawDimension($dimensions, 'dimension.IPTC', ',')")
            #if ($category)
              <category>#cdata($category.trim())</category>
            #end
            #set($numberOfItems = $content.numberOfItems)
            #set($list = $content.defaultList.subList(0, $numberOfItems))
            #foreach($entry in $list)
                #set($linkContent = $entry.content)
                #renderwithfallback({"content": $linkContent.contentId, "params": {"mode": "podcastFeedItem"}})
                  <!-- content $linkContent.contentId does not have the podcastItem mode -->
                #end
            #end
        </channel>
</rss>
#else
  #if (!$tag)
    #set($tag = "div")
  #end
  #if (!$title)
    #set($title=$content.name)
  #end
  #set($cssClass="media")
  #if ($index)
    #set($cssClass="$cssClass index${index}")
  #end
  <$tag class="$cssClass">
    #if ($hasImage)
    <div class="pull-left">
      <a href="#">
        <img class="media-object" src="${urlBuilder.width(32).buildUrl()}" alt="$!esc.html($title)">
      </a>
    </div>
    #end
    <div class="media-body">
      <h4 class="media-heading">$!title</h4>

      #if ($from)
        ## $from is 1 based, make it 0 based.
        #set($from = $math.sub($math.toInteger($from), 1))
      #else
        #set($from = 0)
      #end

      #set($origListSize = $content.defaultList.size())
      #if ($max)
        #set($numberOfItems = $math.min($math.toInteger($max), $origListSize))
      #else
        #set($numberOfItems = $content.numberOfItems)
      #end
      #if ($numberOfItems <= 0)
        #set($numberOfItems = $origListSize)
      #end

      #if ($from > 0)
        ## make sure $numberOfItems still fall in the current list size
        #set($numberOfItems = $math.min($math.add($numberOfItems, $from), $origListSize))
      #elseif ($from < 0)
        #set($from = 0)
      #end

      #set($list = $content.defaultList.subList($from, $numberOfItems))
      #if ($list.size() > 0)
        #foreach($entry in $list)
            #set($linkContent = $entry.content)
            #render({"content": $linkContent.contentId, "params": {"mode": "podcastItem"}})
        #end
      #end

    </div>
  </$tag>
#end